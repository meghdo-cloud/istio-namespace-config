{{- define "patterns.egress.cloud-storage" -}}
{{- $pattern := .pattern }}
{{- $root := .root }}
{{- $useEgressGateway := $pattern.useEgressGateway | default $root.Values.global.egressDefaults.useEgressGateway }}
---
# ServiceEntry for {{ $pattern.name }} (Cloud Storage - High Throughput)
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: {{ $pattern.name }}-se
  namespace: {{ $root.Values.namespace.name | default $root.Release.Namespace }}
  labels:
    pattern: "cloud-storage"
    pattern-name: {{ $pattern.name }}
spec:
  hosts:
    - {{ $pattern.host | quote }}
  location: MESH_EXTERNAL
  resolution: DNS
  ports:
    - number: 443
      name: https
      protocol: HTTPS
---
{{- if $useEgressGateway }}
# Egress Gateway for {{ $pattern.name }}
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: {{ $pattern.name }}-egress
  namespace: {{ $root.Values.namespace.name | default $root.Release.Namespace }}
  labels:
    pattern: "cloud-storage"
    pattern-name: {{ $pattern.name }}
spec:
  selector:
    istio: egressgateway
  servers:
    - port:
        number: 443
        name: tls
        protocol: TLS
      hosts:
        - {{ $pattern.host | quote }}
      tls:
        mode: ISTIO_MUTUAL
---
{{- end }}
# VirtualService for {{ $pattern.name }}
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ $pattern.name }}-vs
  namespace: {{ $root.Values.namespace.name | default $root.Release.Namespace }}
  labels:
    pattern: "cloud-storage"
    pattern-name: {{ $pattern.name }}
spec:
  hosts:
    - {{ $pattern.host | quote }}
  {{- if $useEgressGateway }}
  gateways:
    - {{ $pattern.name }}-egress
    - mesh
  {{- end }}
  http:
    {{- if $useEgressGateway }}
    - match:
        - gateways:
            - mesh
          port: 443
      route:
        - destination:
            host: istio-egressgateway.{{ $root.Values.global.istioNamespace }}.svc.cluster.local
            port:
              number: 443
      timeout: {{ $pattern.timeout | default "120s" }}
    - match:
        - gateways:
            - {{ $pattern.name }}-egress
          port: 443
      route:
        - destination:
            host: {{ $pattern.host | quote }}
            port:
              number: 443
    {{- else }}
    - route:
        - destination:
            host: {{ $pattern.host | quote }}
            port:
              number: 443
      timeout: {{ $pattern.timeout | default "120s" }}
    {{- end }}
---
# DestinationRule for {{ $pattern.name }} - Optimized for large transfers
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: {{ $pattern.name }}-dr
  namespace: {{ $root.Values.namespace.name | default $root.Release.Namespace }}
  labels:
    pattern: "cloud-storage"
    pattern-name: {{ $pattern.name }}
spec:
  host: {{ $pattern.host | quote }}
  trafficPolicy:
    tls:
      mode: SIMPLE
      sni: {{ $pattern.host | quote }}
    connectionPool:
      tcp:
        maxConnections: {{ $pattern.maxConnections | default 100 }}
      http:
        http1MaxPendingRequests: {{ $pattern.maxPendingRequests | default 200 }}
        http2MaxRequests: {{ $pattern.maxRequests | default 200 }}
        maxRequestsPerConnection: {{ $pattern.maxRequestsPerConnection | default 20 }}
    outlierDetection:
      consecutive5xxErrors: 10
      interval: 60s
      baseEjectionTime: 60s
{{- end -}}